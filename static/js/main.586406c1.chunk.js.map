{"version":3,"sources":["CustomIcons.js","NotesContext.js","Modal.js","CheckCircle.js","Note.js","Notelist.js","NoteActions.js","SearchAddNote.js","App.js","index.js"],"names":["useStyles","makeStyles","icon","color","MySchoolIcon","classes","className","MyHomeIcon","MyWorkIcon","MyPersonIcon","NotesContext","createContext","NotesProvider","props","LOCAL_STORAGE_KEY","useState","notes","setNotes","notesFiltered","setNotesFiltered","checkedNotes","setCheckedNotes","searchTerm","setSearchTerm","open","setOpen","modalEditNote","setModalEditNote","taglist","useEffect","newCheckedNotes","storedNotes","JSON","parse","localStorage","getItem","map","note","id","value","demoNotes","uuidv4","title","content","date","Date","now","tag","bookmarked","setItem","stringify","Provider","children","SelectInput","withStyles","theme","input","height","boxShadow","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","fontFamily","join","InputBase","modalTitleTag","marginTop","marginBottom","display","flexDirection","titleField","opacity","textIndent","outline","borderColor","width","flex","selectForm","marginLeft","tagSelect","contentContainer","contentArea","boxSizing","resize","headerFooter","btnDialogContainer","justifyContent","btnCancel","btnDone","ScrollDialog","descriptionElementRef","useRef","setTitle","setContent","setTag","titleRef","contentRef","useContext","descriptionElement","current","focus","handleClose","Dialog","fullWidth","maxWidth","modal","onClose","aria-labelledby","aria-describedby","DialogTitle","style","paddingTop","paddingBottom","Typography","fontWeight","DialogContent","type","autoFocus","defaultValue","ref","placeholder","FormControl","Select","labelId","onChange","event","target","item","idx","MenuItem","rows","DialogActions","Button","onClick","newNotes","x","trim","e","prevNotes","prev","CheckCircle","selected","FormControlLabel","paddingLeft","control","Checkbox","curr","checked","name","inputProps","checkedIcon","btnNote2","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius","textTransform","btnBM","borderStyle","borderLeftWidth","Note","left","right","marginRight","maxHeight","currNote","Notelist","listedNotes","filter","val","includes","toLowerCase","Fragment","y","Divider","length","btn","borderTop","borderBottom","transitionDuration","btnDel","btnDel2","NoteActions","notesOrdered","setNotesOrdered","ordering","setOrdering","setBookmarked","notesSelected","areNotesSelected","res","handleOrdering","orderType","orderNotes","filterBookmarked","orderedNotes","sort","a","b","localeCompare","disableRipple","classNames","deletionIDs","searchField","verticalAlign","lineHeight","borderWidth","minWidth","paddingRight","maxLength","btnAdd","SearchAddNote","textAlign","pointerEvents","createMuiTheme","root","top","header","headerText","MyCard","Card","CardHeader","variant","CardContent","App","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.586406c1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\n\r\nconst useStyles = makeStyles({\r\n    icon: {\r\n        color: \"#424242\",\r\n    },\r\n});\r\n\r\nexport const MySchoolIcon = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <SchoolIcon className={classes.icon} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const MyHomeIcon = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <HomeIcon className={classes.icon} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const MyWorkIcon = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <WorkIcon className={classes.icon} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const MyPersonIcon = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <PersonIcon className={classes.icon} />\r\n        </div>\r\n    );\r\n};\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n    MyPersonIcon,\r\n    MyHomeIcon,\r\n    MySchoolIcon,\r\n    MyWorkIcon,\r\n} from \"./CustomIcons\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\n\r\nexport const NotesContext = createContext();\r\n\r\nexport const NotesProvider = (props) => {\r\n    const LOCAL_STORAGE_KEY = \"notebookApp.notes\";\r\n    const [notes, setNotes] = useState([]);\r\n    const [notesFiltered, setNotesFiltered] = useState(notes);\r\n    const [checkedNotes, setCheckedNotes] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const [modalEditNote, setModalEditNote] = useState(null);\r\n    const taglist = [\r\n        null,\r\n        <MyPersonIcon />,\r\n        <MyHomeIcon />,\r\n        <MySchoolIcon />,\r\n        <MyWorkIcon />,\r\n        <ShoppingCartIcon />,\r\n        <FlightIcon />,\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const storedNotes = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n        let newCheckedNotes;\r\n        if (storedNotes) {\r\n            setNotes(storedNotes);\r\n\r\n            newCheckedNotes = storedNotes.map((note) => {\r\n                return { id: note.id, value: false };\r\n            });\r\n        } else {\r\n            const demoNotes = [\r\n                {\r\n                    id: uuidv4(),\r\n                    title: \"lorem ipsum meaning\",\r\n                    content:\r\n                        'In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before final copy is available. It is also used to temporarily replace text in a process called \"greeking\", which allows designers to consider the form of a webpage or publication, without the meaning of the text influencing the design.',\r\n                    date: Date.now(),\r\n                    tag: 0,\r\n                    bookmarked: false,\r\n                },\r\n                {\r\n                    id: uuidv4(),\r\n                    title: \"dog breeds\",\r\n                    content:\r\n                        \"Labrador Retriever\\nGerman Shepherd\\nGolden Retriever\\nBulldog\\nGreyhound\\nRottweiler\\nSiberian Husky\\nBoxer\\nShiba Inu\\nBeagle\\nPoodle\\nGreat Dane\\nDoberman Pinscher\",\r\n                    date: Date.now(),\r\n                    tag: 0,\r\n                    bookmarked: false,\r\n                },\r\n                {\r\n                    id: uuidv4(),\r\n                    title: \"preparations\",\r\n                    content:\r\n                        \"-pack clothes\\n-water garden plants\\n-wash dishes\\n-vacuum clean house\\n-seal windows\\n-spray insecticide\\n-pay house rent\\n\",\r\n                    date: Date.now(),\r\n                    tag: 2,\r\n                    bookmarked: false,\r\n                },\r\n                {\r\n                    id: uuidv4(),\r\n                    title: \"grocery list\",\r\n                    content:\r\n                        \"Fruit/Veg:\\n\\tlemons, lettuce, garlic, onions, cucumbers, potatoes\\nDaisy:\\n\\tmilk, eggs, cheese\\nMeat:\\n\\tsalmon, beef, bacon\\nCondiments:\\n\\toil, vinegar, jam, ketchup\\nOther:\\n\\tbeans, tomato soup, pasta, yeast, bread buns, sugar, cereal\\nBeverages:\\n\\tcoffee, fruit juice, beer\\nHouse:\\n\\thand soap, shampoo, toothpaste, toilet paper\\nMiscellaneous:\\n\\tplastic wrap, tissues, batteries\",\r\n                    date: Date.now(),\r\n                    tag: 5,\r\n                    bookmarked: false,\r\n                },\r\n            ];\r\n            setNotes(demoNotes);\r\n\r\n            newCheckedNotes = demoNotes.map((note) => {\r\n                return { id: note.id, value: false };\r\n            });\r\n            // console.log(\"the demoNotes: \" + JSON.stringify(newCheckedNotes));\r\n        }\r\n\r\n        setCheckedNotes(newCheckedNotes);\r\n        // console.log(\"CHECKED NOTES: \" + JSON.stringify(newCheckedNotes));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(notes));\r\n    }, [notes]);\r\n\r\n    return (\r\n        <NotesContext.Provider\r\n            value={{\r\n                notes,\r\n                setNotes,\r\n                notesFiltered,\r\n                setNotesFiltered,\r\n                checkedNotes,\r\n                setCheckedNotes,\r\n                searchTerm,\r\n                setSearchTerm,\r\n                open,\r\n                setOpen,\r\n                modalEditNote,\r\n                setModalEditNote,\r\n                taglist,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </NotesContext.Provider>\r\n    );\r\n};\r\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { NotesContext } from \"./NotesContext\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst SelectInput = withStyles((theme) => ({\r\n    input: {\r\n        height: \"22px\",\r\n        boxShadow: \"1px 2px 4px 0px rgba(0,0,0,.25)\",\r\n        borderRadius: 4,\r\n        position: \"relative\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: \"3px solid transparent\",\r\n        fontSize: 16,\r\n        padding: \"10px 26px 10px 12px\",\r\n        // transition: theme.transitions.create([\"border-color\"]),\r\n        fontFamily: [\r\n            \"-apple-system\",\r\n            \"BlinkMacSystemFont\",\r\n            '\"Segoe UI\"',\r\n            \"Roboto\",\r\n            '\"Helvetica Neue\"',\r\n            \"Arial\",\r\n            \"sans-serif\",\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(\",\"),\r\n        \"&:hover\": {\r\n            backgroundColor: \"#e6f3ff\",\r\n        },\r\n        \"&:focus\": {\r\n            borderRadius: 4,\r\n            backgroundColor: \"#e6f3ff\",\r\n            border: \"3px solid #80bdff\",\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // modal: {},\r\n    modalTitleTag: {\r\n        marginTop: 0,\r\n        marginBottom: 10,\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n    titleField: {\r\n        \"&::placeholder\": {\r\n            color: \"black\",\r\n            opacity: 0.4,\r\n        },\r\n        height: \"40px\",\r\n        fontSize: 20,\r\n        textIndent: 10,\r\n        outline: \"none\",\r\n        borderRadius: \"4px\",\r\n        // transition: theme.transitions.create([\"border-color\"]),\r\n        border: \"3px solid transparent\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#e6f3ff\",\r\n        },\r\n        \"&:focus\": {\r\n            borderColor: \"#80bdff\",\r\n            backgroundColor: \"#e6f3ff\",\r\n        },\r\n        width: \"60px\",\r\n        flex: \"1 1 100%\",\r\n        boxShadow: \"1px 2px 4px 0px rgba(0,0,0,.25)\",\r\n    },\r\n    selectForm: {\r\n        marginLeft: 10,\r\n        flex: \"1 1 100px\",\r\n    },\r\n    tagSelect: {\r\n        height: \"45px\",\r\n    },\r\n    contentContainer: {},\r\n    contentArea: {\r\n        boxSizing: \"border-box\",\r\n        width: \"100%\",\r\n        resize: \"none\",\r\n        padding: \"10px 10px\",\r\n        backgroundColor: \"white\",\r\n        boxShadow: \"1px 2px 4px 0px rgba(0,0,0,.25)\",\r\n        // transition: theme.transitions.create([\"border-color\"]),\r\n        outline: \"none\",\r\n        borderRadius: \"4px\",\r\n        border: \"3px solid transparent\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#e6f3ff\",\r\n        },\r\n        \"&:focus\": {\r\n            borderColor: \"#80bdff\",\r\n            backgroundColor: \"#e6f3ff\",\r\n        },\r\n        \"&::placeholder\": {\r\n            color: \"rgba(0,0,0,.4)\",\r\n        },\r\n    },\r\n    headerFooter: {\r\n        background:\r\n            \"linear-gradient(135deg, rgba(161,201,190,1) 0%, rgba(108,175,156,1) 100%)\",\r\n    },\r\n    btnDialogContainer: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n    },\r\n    btnCancel: {\r\n        backgroundColor: \"rgba(255,255,255, 0.3)\",\r\n        flex: \"1 1 50px\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#dbadad\",\r\n        },\r\n    },\r\n    btnDone: {\r\n        backgroundColor: \"rgba(255,255,255, 0.3)\",\r\n        flex: \"1 1 50px\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#99d192\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function ScrollDialog() {\r\n    const classes = useStyles();\r\n    const descriptionElementRef = useRef(null);\r\n    const [title, setTitle] = useState(null);\r\n    const [content, setContent] = useState(null);\r\n    const [tag, setTag] = useState(0);\r\n    const titleRef = useRef();\r\n    const contentRef = useRef();\r\n    const {\r\n        notes,\r\n        setNotes,\r\n        setCheckedNotes,\r\n        open,\r\n        setOpen,\r\n        modalEditNote,\r\n        taglist,\r\n    } = useContext(NotesContext);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\r\n    //         \"editNoteModal useEffect: \" + JSON.stringify(modalEditNote)\r\n    //     );\r\n    // }, [modalEditNote]);\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n\r\n            if (modalEditNote) {\r\n                setTitle(modalEditNote.title);\r\n                setContent(modalEditNote.content);\r\n                setTag(modalEditNote.tag);\r\n            } else {\r\n                setTag(0);\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n    const handleClose = () => {\r\n        setTitle(null);\r\n        setContent(null);\r\n        // setTag(0);\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setTag(event.target.value);\r\n    };\r\n\r\n    function handleAddNote(e) {\r\n        const id = uuidv4();\r\n        setNotes((prevNotes) => {\r\n            return [\r\n                ...prevNotes,\r\n                {\r\n                    id: id,\r\n                    title: titleRef.current.value.trim()\r\n                        ? titleRef.current.value.trim()\r\n                        : \"(no title)\",\r\n                    content: contentRef.current.value.trim(),\r\n                    date: Date.now(),\r\n                    tag: tag,\r\n                    bookmarked: false,\r\n                },\r\n            ];\r\n        });\r\n        setCheckedNotes((prev) => {\r\n            return [...prev, { id: id, value: false }];\r\n        });\r\n        handleClose();\r\n    }\r\n\r\n    const handleEditNote = () => {\r\n        const newNotes = notes.map((x) => {\r\n            if (x.id === modalEditNote.id) {\r\n                return {\r\n                    id: x.id,\r\n                    title: titleRef.current.value.trim()\r\n                        ? titleRef.current.value.trim()\r\n                        : \"(no title)\",\r\n                    content: contentRef.current.value.trim(),\r\n                    date: x.date,\r\n                    tag: tag,\r\n                    bookmarked: x.bookmarked,\r\n                };\r\n            }\r\n            return x;\r\n        });\r\n\r\n        setNotes(newNotes);\r\n        // console.log(\"handle edit note: \" + JSON.stringify(newNotes));\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullWidth={true}\r\n                maxWidth=\"sm\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n            >\r\n                <DialogTitle\r\n                    id=\"scroll-dialog-title\"\r\n                    style={{\r\n                        paddingTop: \"10px\",\r\n                        paddingBottom: \"10px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                    className={classes.headerFooter}\r\n                >\r\n                    <Typography\r\n                        style={{\r\n                            fontSize: \"30px\",\r\n                            color: \"#353138\",\r\n                            fontWeight: \"600\",\r\n                        }}\r\n                    >\r\n                        {modalEditNote ? \"Edit note\" : \"New note\"}\r\n                    </Typography>\r\n                </DialogTitle>\r\n                <DialogContent\r\n                    style={{\r\n                        backgroundColor: \"#e9f2ef\",\r\n                    }}\r\n                >\r\n                    <div className={classes.modalTitleTag}>\r\n                        <input\r\n                            type=\"text\"\r\n                            autoFocus={!modalEditNote}\r\n                            defaultValue={title}\r\n                            ref={titleRef}\r\n                            placeholder=\"Cookie recipe\"\r\n                            className={classes.titleField}\r\n                        />\r\n                        <FormControl className={classes.selectForm}>\r\n                            <Select\r\n                                labelId=\"demo-customized-select-label\"\r\n                                id=\"demo-customized-select\"\r\n                                value={tag}\r\n                                onChange={handleChange}\r\n                                input={<SelectInput />}\r\n                            >\r\n                                {/* <MenuItem value={0}>\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={1}>\r\n                                    <PersonIcon />\r\n                                </MenuItem>\r\n                                <MenuItem value={2}>\r\n                                    <HomeIcon />\r\n                                </MenuItem>\r\n                                <MenuItem value={3}>\r\n                                    <SchoolIcon />\r\n                                </MenuItem>\r\n                                <MenuItem value={4}>\r\n                                    <WorkIcon />\r\n                                </MenuItem> */}\r\n                                {taglist.map((item, idx) => {\r\n                                    return (\r\n                                        <MenuItem key={uuidv4()} value={idx}>\r\n                                            {item ? item : \"None\"}\r\n                                        </MenuItem>\r\n                                    );\r\n                                })}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"contentContainer\">\r\n                        <textarea\r\n                            className={classes.contentArea}\r\n                            ref={contentRef}\r\n                            autoFocus={modalEditNote}\r\n                            defaultValue={content}\r\n                            rows={8}\r\n                            placeholder=\"-Eggs\r\n-Milk\r\n-Baking soda\r\n-Flour\r\n-Butter\r\n-Sugar\r\n-Chocolate\"\r\n                        />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions className={classes.headerFooter}>\r\n                    <div className={classes.btnDialogContainer}>\r\n                        <Button\r\n                            className={classes.btnCancel}\r\n                            onClick={handleClose}\r\n                            color=\"primary\"\r\n                        >\r\n                            <Typography\r\n                                style={{\r\n                                    fontSize: \"16px\",\r\n                                    color: \"#353138\",\r\n                                    fontWeight: \"400\",\r\n                                }}\r\n                            >\r\n                                Cancel\r\n                            </Typography>\r\n                        </Button>\r\n                        <div\r\n                            style={{\r\n                                width: \"8px\",\r\n                                height: \"100%\",\r\n                            }}\r\n                        ></div>\r\n                        <Button\r\n                            className={classes.btnDone}\r\n                            onClick={\r\n                                modalEditNote ? handleEditNote : handleAddNote\r\n                            }\r\n                            color=\"primary\"\r\n                        >\r\n                            <Typography\r\n                                style={{\r\n                                    fontSize: \"16px\",\r\n                                    color: \"#353138\",\r\n                                    fontWeight: \"400\",\r\n                                }}\r\n                            >\r\n                                Done\r\n                            </Typography>\r\n                        </Button>\r\n                    </div>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { NotesContext } from \"./NotesContext\";\r\nimport { FormControlLabel, Checkbox } from \"@material-ui/core\";\r\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\n\r\nconst CheckCircle = ({ note, selected }) => {\r\n    const { checkedNotes, setCheckedNotes } = useContext(NotesContext);\r\n\r\n    const handleSelect = (e) => {\r\n        const newCheckedNotes = checkedNotes.map((curr) => {\r\n            if (curr.id === note.id) {\r\n                return { id: curr.id, value: e.target.checked };\r\n            }\r\n            return curr;\r\n        });\r\n        setCheckedNotes(newCheckedNotes);\r\n        // console.log(\"HANDLE SELECT: \" + JSON.stringify(newCheckedNotes));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FormControlLabel\r\n                style={{ paddingLeft: \"11px\" }}\r\n                control={\r\n                    <Checkbox\r\n                        onChange={handleSelect}\r\n                        checked={selected}\r\n                        name={note.id}\r\n                        inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        icon={<RadioButtonUncheckedIcon />}\r\n                        checkedIcon={<RemoveCircleIcon />}\r\n                    />\r\n                }\r\n            />\r\n        </>\r\n    );\r\n};\r\nexport default CheckCircle;\r\n","import React, { useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport { NotesContext } from \"./NotesContext\";\r\nimport CheckCircle from \"./CheckCircle\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    btnNote2: {\r\n        border: 0,\r\n        borderTopLeftRadius: 10,\r\n        borderBottomLeftRadius: 10,\r\n        borderBottomRightRadius: 0,\r\n        borderTopRightRadius: 0,\r\n        textTransform: \"none\",\r\n        flex: \"1 1 50px\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#cce7ff\",\r\n        },\r\n    },\r\n    btnBM: {\r\n        color: \"#424242\",\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"19px\",\r\n        borderTopLeftRadius: 0,\r\n        borderBottomLeftRadius: 0,\r\n        \"&:hover\": {\r\n            backgroundColor: \"#cce7ff\",\r\n        },\r\n        borderStyle: \"solid\",\r\n        borderColor: \"rgba(0,0,0,0.25)\",\r\n        borderLeftWidth: 1,\r\n        paddingLeft: 4,\r\n        maxWidth: 50,\r\n        // \"& .MuiButton-label\": {\r\n        //     maxWidth: 24,\r\n        // },\r\n    },\r\n}));\r\n\r\n// const taglist = [\r\n//     null,\r\n//     <MyPersonIcon />,\r\n//     <MyHomeIcon />,\r\n//     <MySchoolIcon />,\r\n//     <MyWorkIcon />,\r\n// ];\r\n\r\nconst Note = ({ note, selected }) => {\r\n    const classes = useStyles();\r\n    const { notes, setNotes, setOpen, setModalEditNote, taglist } = useContext(\r\n        NotesContext\r\n    );\r\n\r\n    // React.useEffect(() => {\r\n    //     console.log(\"selected? \" + note.id.slice(0, 8) + \" \" + selected);\r\n    // }, [selected]);\r\n\r\n    const handleClickOpen = () => {\r\n        setModalEditNote(note);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleBookmark = () => {\r\n        // console.log(\"bookmark\");\r\n        const newNotes = notes.map((currNote) => {\r\n            if (currNote === note) {\r\n                currNote.bookmarked = !note.bookmarked;\r\n            }\r\n            return currNote;\r\n        });\r\n        setNotes(newNotes);\r\n        // console.log(newNotes);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"note-container\">\r\n                <CheckCircle note={note} selected={selected} />\r\n                <div className=\"note-btn-wrapper\">\r\n                    <Button\r\n                        className={classes.btnNote2}\r\n                        onClick={handleClickOpen}\r\n                    >\r\n                        <Typography\r\n                            style={{\r\n                                position: \"absolute\",\r\n                                left: 14,\r\n                            }}\r\n                        >\r\n                            {note.title}\r\n                        </Typography>\r\n                        <div\r\n                            style={{\r\n                                position: \"absolute\",\r\n                                right: 0,\r\n                                marginRight: 20,\r\n                                maxHeight: 24,\r\n                            }}\r\n                        >\r\n                            {taglist[note.tag]}\r\n                        </div>\r\n                    </Button>\r\n                    <Button className={classes.btnBM} onClick={handleBookmark}>\r\n                        {note.bookmarked ? (\r\n                            <BookmarkIcon />\r\n                        ) : (\r\n                            <BookmarkBorderIcon />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Note;\r\n","import React, { useContext } from \"react\";\r\nimport Note from \"./Note\";\r\nimport { NotesContext } from \"./NotesContext\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst Notelist = () => {\r\n    const { checkedNotes, notesFiltered, searchTerm } = useContext(\r\n        NotesContext\r\n    );\r\n\r\n    const listedNotes = notesFiltered\r\n        .filter((val) => {\r\n            if (searchTerm === \"\") {\r\n                return val;\r\n            } else if (\r\n                val.title.includes(searchTerm.toLowerCase()) ||\r\n                val.content.includes(searchTerm.toLowerCase())\r\n            ) {\r\n                return val;\r\n            }\r\n            return null;\r\n        })\r\n        .map((note) => {\r\n            return (\r\n                <React.Fragment key={uuidv4()}>\r\n                    <Note\r\n                        key={note.id}\r\n                        note={note}\r\n                        selected={\r\n                            checkedNotes\r\n                                .filter((x) => x.id === note.id)\r\n                                .map((y) => y.value)[0]\r\n                                ? true\r\n                                : false\r\n                        }\r\n                    />\r\n                    <Divider />\r\n                </React.Fragment>\r\n            );\r\n        });\r\n\r\n    return (\r\n        <>\r\n            <div className=\"notes-container\">\r\n                {listedNotes.length !== 0 ? (\r\n                    listedNotes\r\n                ) : (\r\n                    <i className=\"note-container\">No notes found</i>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notelist;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport { NotesContext } from \"./NotesContext\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport EventIcon from \"@material-ui/icons/Event\";\r\nimport BookmarksIcon from \"@material-ui/icons/Bookmarks\";\r\nimport TitleIcon from \"@material-ui/icons/Title\";\r\nimport classNames from \"classnames\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    btn: {\r\n        backgroundColor: \"#424242\",\r\n        color: \"white\",\r\n        height: \"50px\",\r\n        borderRadius: 0,\r\n        \"&:hover\": {\r\n            backgroundColor: \"#000000\",\r\n        },\r\n        flex: \" 1 1 80px\",\r\n        borderTop: \"5px solid transparent\",\r\n        borderBottom: \"5px solid transparent\",\r\n        transitionDuration: \"0.1s\",\r\n    },\r\n    // btnDel: {\r\n    //     backgroundColor: \"#ff5252\",\r\n    //     color: \"white\",\r\n    //     height: \"50px\",\r\n    //     borderRadius: 0,\r\n    //     \"&:hover\": {\r\n    //         backgroundColor: \"#d11313\",\r\n    //     },\r\n    //     flex: \" 1 1 80px\",\r\n    // },\r\n    btnDel: {\r\n        backgroundColor: \"#ff2b2b\",\r\n        color: \"white\",\r\n        height: \"50px\",\r\n        borderRadius: 0,\r\n        \"&:hover\": {\r\n            backgroundColor: \"#d11313\",\r\n        },\r\n        flex: \" 1 1 80px\",\r\n    },\r\n    btnDel2: {\r\n        backgroundColor: \"#ff8080\",\r\n        color: \"white\",\r\n\r\n        \"&:hover\": {\r\n            backgroundColor: \"#ff8080\",\r\n            color: \"white\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst NoteActions = () => {\r\n    const classes = useStyles();\r\n    const [notesOrdered, setNotesOrdered] = useState(null);\r\n    const [ordering, setOrdering] = useState(null);\r\n    const [bookmarked, setBookmarked] = useState(false);\r\n    const [notesSelected, areNotesSelected] = useState(false);\r\n    const {\r\n        notes,\r\n        setNotes,\r\n        setNotesFiltered,\r\n        checkedNotes,\r\n        setCheckedNotes,\r\n    } = useContext(NotesContext);\r\n\r\n    useEffect(() => {\r\n        // console.log(\"> areNotesSelected useEffect\");\r\n        const res = checkedNotes.filter((x) => x.value).length !== 0;\r\n        areNotesSelected(res);\r\n    }, [checkedNotes]);\r\n\r\n    const handleNoteDeletion = () => {\r\n        const deletionIDs = checkedNotes\r\n            .map((curr) => {\r\n                return curr.value ? curr.id : null;\r\n            })\r\n            .filter((x) => x);\r\n\r\n        const newNotes = notes.filter((note) => !deletionIDs.includes(note.id));\r\n        // console.log(\"HANDLE DELETION: \" + JSON.stringify(deletionIDs));\r\n        // console.log(\"HANDLE DELETION 2: \" + JSON.stringify(newNotes));\r\n\r\n        const newCheckedNotes = newNotes.map((note) => {\r\n            return { id: note.id, value: false };\r\n        });\r\n        setNotes(newNotes);\r\n        setCheckedNotes(newCheckedNotes);\r\n    };\r\n\r\n    const handleBookmarked = () => {\r\n        // console.log(bookmarked);\r\n        setBookmarked(!bookmarked);\r\n    };\r\n\r\n    const handleOrdering = (orderType) => {\r\n        if (orderType === \"text\") {\r\n            if (!ordering || ordering !== \"asc\") {\r\n                setOrdering(\"asc\");\r\n            } else {\r\n                setOrdering(\"desc\");\r\n            }\r\n        } else if (orderType === \"date\") {\r\n            if (!ordering || ordering !== \"new\") {\r\n                setOrdering(\"new\");\r\n            } else {\r\n                setOrdering(\"old\");\r\n            }\r\n        }\r\n        // console.log(\"in handleOrdering \" + orderType);\r\n    };\r\n\r\n    useEffect(() => {\r\n        orderNotes();\r\n        // console.log(\">>> orderNotes useEffect \" + ordering);\r\n    }, [notes, ordering]);\r\n\r\n    useEffect(() => {\r\n        filterBookmarked();\r\n        // console.log(\">>> filterBookmarked useEffect \" + bookmarked);\r\n    }, [notesOrdered, bookmarked]);\r\n\r\n    const orderNotes = () => {\r\n        let orderedNotes = [...notes];\r\n        orderedNotes.sort((a, b) => {\r\n            if (ordering === \"asc\") return a.title.localeCompare(b.title);\r\n            else if (ordering === \"desc\")\r\n                return -1 * a.title.localeCompare(b.title);\r\n            else if (ordering === \"new\") return a.date <= b.date ? 1 : -1;\r\n            else return a.date <= b.date ? -1 : 1;\r\n        });\r\n        setNotesOrdered(orderedNotes);\r\n        // console.log(\">>>\" + JSON.stringify(notesSorted));\r\n    };\r\n\r\n    const filterBookmarked = () => {\r\n        // console.log(\"inside filter bookmarked\");\r\n        const newNotes = notesOrdered\r\n            ? notesOrdered.filter((note) => {\r\n                  if (bookmarked) return note.bookmarked;\r\n                  return true;\r\n              })\r\n            : notes;\r\n\r\n        setNotesFiltered(newNotes);\r\n        // console.log(\"bookmarked: \" + bookmarked);\r\n        // console.log(newNotes);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"toolbar-container\">\r\n                <Button\r\n                    className={classes.btn}\r\n                    onClick={() => handleOrdering(\"text\")}\r\n                    style={\r\n                        ordering === \"asc\" || ordering === \"desc\"\r\n                            ? { borderBottom: \"5px solid #d900ff\" }\r\n                            : null\r\n                    }\r\n                >\r\n                    {ordering === \"asc\" || ordering === \"desc\" ? (\r\n                        ordering === \"asc\" ? (\r\n                            <>\r\n                                <TitleIcon />\r\n                                <KeyboardArrowDownIcon />\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <TitleIcon />\r\n                                <KeyboardArrowUpIcon />\r\n                            </>\r\n                        )\r\n                    ) : (\r\n                        <TitleIcon />\r\n                    )}\r\n                </Button>\r\n                <Button\r\n                    className={classes.btn}\r\n                    onClick={() => handleOrdering(\"date\")}\r\n                    style={\r\n                        ordering === \"new\" || ordering === \"old\"\r\n                            ? { borderBottom: \"5px solid #d900ff\" }\r\n                            : null\r\n                    }\r\n                >\r\n                    {ordering === \"new\" || ordering === \"old\" ? (\r\n                        ordering === \"new\" ? (\r\n                            <>\r\n                                <EventIcon />\r\n                                <KeyboardArrowDownIcon />\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <EventIcon />\r\n                                <KeyboardArrowUpIcon />\r\n                            </>\r\n                        )\r\n                    ) : (\r\n                        <EventIcon />\r\n                    )}\r\n                </Button>\r\n                <Button\r\n                    className={classes.btn}\r\n                    onClick={handleBookmarked}\r\n                    style={\r\n                        bookmarked === true\r\n                            ? { borderBottom: \"5px solid #ffc800\" }\r\n                            : null\r\n                    }\r\n                >\r\n                    <BookmarksIcon />\r\n                </Button>\r\n                <Button\r\n                    disableRipple={!notesSelected}\r\n                    className={classNames(\r\n                        classes.btnDel,\r\n                        notesSelected ? null : classes.btnDel2\r\n                    )}\r\n                    onClick={handleNoteDeletion}\r\n                >\r\n                    <DeleteIcon />\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NoteActions;\r\n","import \"./App.css\";\r\nimport React, { useContext } from \"react\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { NotesContext } from \"./NotesContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    searchField: {\r\n        verticalAlign: \"middle\",\r\n        lineHeight: \"48px\",\r\n        flex: \" 1 1 75%\",\r\n        backgroundColor: \"#ffffff\",\r\n        borderRadius: 0,\r\n        borderTopLeftRadius: 25,\r\n        borderBottomLeftRadius: 25,\r\n        textIndent: 48,\r\n        borderStyle: \"solid\",\r\n        borderWidth: 1,\r\n        borderColor: \"transparent\",\r\n        minWidth: 50,\r\n        height: 48,\r\n        fontSize: 20,\r\n        paddingRight: \"5%\",\r\n        maxLength: 10,\r\n        boxShadow: \"1px 2px 10px rgba(0,0,0,0.25)\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#e3eeff\",\r\n        },\r\n        \"&:focus\": {\r\n            backgroundColor: \"#e3eeff\",\r\n            borderColor: \"transparent\",\r\n            outline: \"none\",\r\n        },\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: \"#1d8b8b\",\r\n        color: \"white\",\r\n        borderRadius: \"0px\",\r\n        minWidth: \"80px\",\r\n        flex: \" 1 1 25%\",\r\n        boxShadow: \"0px 2px 10px rgba(0,0,0,0.25)\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#006969\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport const SearchAddNote = () => {\r\n    const classes = useStyles();\r\n    const { setSearchTerm, setOpen, setModalEditNote } = useContext(\r\n        NotesContext\r\n    );\r\n\r\n    const handleClickOpen = () => {\r\n        setModalEditNote(null);\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"search-add-container\">\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        left: 30,\r\n                        maxHeight: 24,\r\n                        textAlign: \"center\",\r\n                        verticalAlign: \"middle\",\r\n                        lineHeight: \"48px\",\r\n                        fontSize: 20,\r\n                        pointerEvents: \"none\",\r\n                    }}\r\n                >\r\n                    🔍\r\n                </div>\r\n                <input\r\n                    className={classes.searchField}\r\n                    type=\"search\"\r\n                    placeholder=\"Search notes\"\r\n                    onChange={(e) => {\r\n                        setSearchTerm(e.target.value.trim());\r\n                    }}\r\n                />\r\n                <Button className={classes.btnAdd} onClick={handleClickOpen}>\r\n                    <AddIcon />\r\n                    <Typography>Note</Typography>\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import \"./App.css\";\nimport React from \"react\";\nimport MyDialog from \"./Modal.js\";\nimport {\n    Typography,\n    Divider,\n    Card,\n    CardHeader,\n    CardContent,\n} from \"@material-ui/core\";\nimport {\n    makeStyles,\n    ThemeProvider,\n    createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nimport Notelist from \"./Notelist\";\nimport { NotesProvider } from \"./NotesContext\";\nimport NoteActions from \"./NoteActions\";\nimport { SearchAddNote } from \"./SearchAddNote\";\n\nconst theme = createMuiTheme({\n    // typography: {\n    //     h4: {\n    //         fontSize: 24,\n    //     },\n    // },\n    // palette: {\n    //     accent1: {\n    //         backgroundColor: purple[500],\n    //         color: \"white\",\n    //         marginBottom: 20,\n    //     },\n    // },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position: \"absolute\",\n        top: \"4%\",\n        width: \"100%\",\n        maxWidth: 768,\n        backgroundColor: \"#fff7ba\",\n        \"@media (max-width:768px)\": {\n            top: 0,\n        },\n        boxShadow: \"0px 2px 20px rgba(0,0,0,0.4)\",\n    },\n    header: {\n        backgroundColor: \"white\",\n    },\n    headerText: {\n        fontWeight: 700,\n        fontSize: 40,\n        color: \"#424242\",\n    },\n}));\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <div className=\"App\">\n                <NotesProvider>\n                    <MyCard />\n                    <MyDialog />\n                </NotesProvider>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nconst MyCard = () => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <CardHeader\n                title={\n                    <Typography variant=\"h4\" className={classes.headerText}>\n                        Notepad\n                    </Typography>\n                }\n                className={classes.header}\n            />\n            <Divider />\n            <CardContent>\n                <NoteActions />\n            </CardContent>\n            <Divider />\n            <CardContent>\n                <SearchAddNote />\n            </CardContent>\n            <Divider />\n            <CardContent>\n                <Notelist />\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}