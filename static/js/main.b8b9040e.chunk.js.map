{"version":3,"sources":["CustomIcons.js","NotesContext.js","Modal.js","CheckCircle.js","Note.js","Notelist.js","NoteActions.js","SearchAddNote.js","App.js","index.js"],"names":["useStyles","makeStyles","icon","color","MySchoolIcon","classes","className","MyHomeIcon","MyWorkIcon","MyPersonIcon","MyShoppingCartIcon","MyFlightIcon","NotesContext","createContext","NotesProvider","props","LOCAL_STORAGE_KEY","useState","notes","setNotes","notesFiltered","setNotesFiltered","checkedNotes","setCheckedNotes","searchTerm","setSearchTerm","open","editNote","modal","setModal","taglist","useEffect","newCheckedNotes","storedNotes","JSON","parse","localStorage","getItem","map","note","id","value","demoNotes","uuidv4","title","content","date","Date","now","tag","bookmarked","setItem","stringify","Provider","children","SelectInput","withStyles","input","height","boxShadow","borderRadius","position","backgroundColor","border","fontSize","padding","InputBase","modalTitleTag","marginTop","marginBottom","display","flexDirection","titleField","opacity","textIndent","outline","borderColor","width","flex","selectForm","marginLeft","tagSelect","contentContainer","contentArea","boxSizing","resize","headerFooter","background","btnDialogContainer","justifyContent","btnCancel","btnDone","NoteDialog","descriptionElementRef","useRef","setTitle","setContent","setTag","titleRef","contentRef","useContext","descriptionElement","current","focus","handleClose","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","aria-describedby","DialogTitle","style","paddingTop","paddingBottom","Typography","fontWeight","DialogContent","type","autoFocus","defaultValue","ref","placeholder","FormControl","Select","labelId","onChange","event","target","item","idx","MenuItem","DialogActions","Button","onClick","newNotes","x","trim","e","prevNotes","prev","CheckCircle","selected","FormControlLabel","control","Checkbox","curr","checked","name","inputProps","checkedIcon","btnNote2","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius","textTransform","btnBM","borderStyle","borderLeftWidth","paddingLeft","Note","left","right","marginRight","maxHeight","aria-label","currNote","Notelist","listedNotes","filter","val","toLowerCase","includes","Fragment","y","Divider","length","theme","btn","borderTop","borderBottom","transitionDuration","btnDel","btnDelDisabled","NoteActions","notesOrdered","setNotesOrdered","ordering","setOrdering","setBookmarked","notesSelected","areNotesSelected","res","handleOrdering","orderType","orderedNotes","sort","a","b","localeCompare","clss","disableRipple","deletionIDs","searchField","verticalAlign","lineHeight","borderWidth","minWidth","paddingRight","maxLength","btnAdd","SearchAddNote","textAlign","pointerEvents","root","top","header","headerText","MyCard","Card","CardHeader","variant","CardContent","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8b9040e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\n\r\nconst useStyles = makeStyles({\r\n    icon: {\r\n        color: \"#424242\",\r\n    },\r\n});\r\n\r\nexport const MySchoolIcon = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <SchoolIcon className={classes.icon} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const MyHomeIcon = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <HomeIcon className={classes.icon} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const MyWorkIcon = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <WorkIcon className={classes.icon} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const MyPersonIcon = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <PersonIcon className={classes.icon} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const MyShoppingCartIcon = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <ShoppingCartIcon className={classes.icon} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const MyFlightIcon = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <FlightIcon className={classes.icon} />\r\n        </div>\r\n    );\r\n};\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport {\r\n    MyPersonIcon,\r\n    MyHomeIcon,\r\n    MySchoolIcon,\r\n    MyWorkIcon,\r\n    MyShoppingCartIcon,\r\n    MyFlightIcon,\r\n} from \"./CustomIcons\";\r\n\r\nexport const NotesContext = createContext();\r\n\r\nexport const NotesProvider = (props) => {\r\n    const LOCAL_STORAGE_KEY = \"notebookApp.notes\";\r\n    const [notes, setNotes] = useState([]);\r\n    const [notesFiltered, setNotesFiltered] = useState(notes);\r\n    const [checkedNotes, setCheckedNotes] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    const [modal, setModal] = useState({ open: false, editNote: null });\r\n\r\n    const taglist = [\r\n        null,\r\n        <MyPersonIcon />,\r\n        <MyHomeIcon />,\r\n        <MySchoolIcon />,\r\n        <MyWorkIcon />,\r\n        <MyShoppingCartIcon />,\r\n        <MyFlightIcon />,\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const storedNotes = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n        let newCheckedNotes;\r\n        if (storedNotes) {\r\n            setNotes(storedNotes);\r\n\r\n            newCheckedNotes = storedNotes.map((note) => {\r\n                return { id: note.id, value: false };\r\n            });\r\n        } else {\r\n            const demoNotes = [\r\n                {\r\n                    id: uuidv4(),\r\n                    title: \"lorem ipsum meaning\",\r\n                    content:\r\n                        'In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before final copy is available. It is also used to temporarily replace text in a process called \"greeking\", which allows designers to consider the form of a webpage or publication, without the meaning of the text influencing the design.',\r\n                    date: Date.now(),\r\n                    tag: 0,\r\n                    bookmarked: false,\r\n                },\r\n                {\r\n                    id: uuidv4(),\r\n                    title: \"dog breeds\",\r\n                    content:\r\n                        \"Labrador Retriever\\nGerman Shepherd\\nGolden Retriever\\nBulldog\\nGreyhound\\nRottweiler\\nSiberian Husky\\nBoxer\\nShiba Inu\\nBeagle\\nPoodle\\nGreat Dane\\nDoberman Pinscher\",\r\n                    date: Date.now(),\r\n                    tag: 0,\r\n                    bookmarked: false,\r\n                },\r\n                {\r\n                    id: uuidv4(),\r\n                    title: \"preparations\",\r\n                    content:\r\n                        \"-pack clothes\\n-water garden plants\\n-wash dishes\\n-vacuum clean house\\n-seal windows\\n-spray insecticide\\n-pay house rent\\n\",\r\n                    date: Date.now(),\r\n                    tag: 2,\r\n                    bookmarked: false,\r\n                },\r\n                {\r\n                    id: uuidv4(),\r\n                    title: \"grocery list\",\r\n                    content:\r\n                        \"Fruit/Veg:\\n\\tlemons, lettuce, garlic, onions, cucumbers, potatoes\\nDaisy:\\n\\tmilk, eggs, cheese\\nMeat:\\n\\tsalmon, beef, bacon\\nCondiments:\\n\\toil, vinegar, jam, ketchup\\nOther:\\n\\tbeans, tomato soup, pasta, yeast, bread buns, sugar, cereal\\nBeverages:\\n\\tcoffee, fruit juice, beer\\nHouse:\\n\\thand soap, shampoo, toothpaste, toilet paper\\nMiscellaneous:\\n\\tplastic wrap, tissues, batteries\",\r\n                    date: Date.now(),\r\n                    tag: 5,\r\n                    bookmarked: false,\r\n                },\r\n            ];\r\n            setNotes(demoNotes);\r\n\r\n            newCheckedNotes = demoNotes.map((note) => {\r\n                return { id: note.id, value: false };\r\n            });\r\n        }\r\n\r\n        setCheckedNotes(newCheckedNotes);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(notes));\r\n    }, [notes]);\r\n\r\n    return (\r\n        <NotesContext.Provider\r\n            value={{\r\n                notes,\r\n                setNotes,\r\n                notesFiltered,\r\n                setNotesFiltered,\r\n                checkedNotes,\r\n                setCheckedNotes,\r\n                searchTerm,\r\n                setSearchTerm,\r\n                modal,\r\n                setModal,\r\n                taglist,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </NotesContext.Provider>\r\n    );\r\n};\r\n\r\nexport default NotesContext;\r\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport NotesContext from \"./NotesContext\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst SelectInput = withStyles(() => ({\r\n    input: {\r\n        height: \"22px\",\r\n        boxShadow: \"1px 2px 4px 0px rgba(0,0,0,.25)\",\r\n        borderRadius: 4,\r\n        position: \"relative\",\r\n        backgroundColor: \"white\",\r\n        border: \"3px solid transparent\",\r\n        fontSize: 16,\r\n        padding: \"10px 26px 10px 12px\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#e6f3ff\",\r\n        },\r\n        \"&:focus\": {\r\n            borderRadius: 4,\r\n            backgroundColor: \"#e6f3ff\",\r\n            border: \"3px solid #80bdff\",\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    modalTitleTag: {\r\n        marginTop: 0,\r\n        marginBottom: 10,\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n    titleField: {\r\n        \"&::placeholder\": {\r\n            color: \"black\",\r\n            opacity: 0.4,\r\n        },\r\n        height: \"40px\",\r\n        fontSize: 20,\r\n        textIndent: 10,\r\n        outline: \"none\",\r\n        borderRadius: \"4px\",\r\n        border: \"3px solid transparent\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#e6f3ff\",\r\n        },\r\n        \"&:focus\": {\r\n            borderColor: \"#80bdff\",\r\n            backgroundColor: \"#e6f3ff\",\r\n        },\r\n        width: \"60px\",\r\n        flex: \"1 1 100%\",\r\n        boxShadow: \"1px 2px 4px 0px rgba(0,0,0,.25)\",\r\n    },\r\n    selectForm: {\r\n        marginLeft: 10,\r\n        flex: \"1 1 100px\",\r\n    },\r\n    tagSelect: {\r\n        height: \"45px\",\r\n    },\r\n    contentContainer: {},\r\n    contentArea: {\r\n        height: \"16em\",\r\n        boxSizing: \"border-box\",\r\n        width: \"100%\",\r\n        resize: \"none\",\r\n        padding: \"10px 10px\",\r\n        backgroundColor: \"white\",\r\n        boxShadow: \"1px 2px 4px 0px rgba(0,0,0,.25)\",\r\n        outline: \"none\",\r\n        borderRadius: \"4px\",\r\n        border: \"3px solid transparent\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#e6f3ff\",\r\n        },\r\n        \"&:focus\": {\r\n            borderColor: \"#80bdff\",\r\n            backgroundColor: \"#e6f3ff\",\r\n        },\r\n        \"&::placeholder\": {\r\n            color: \"rgba(0,0,0,.4)\",\r\n        },\r\n    },\r\n    headerFooter: {\r\n        background:\r\n            \"linear-gradient(135deg, rgba(161,201,190,1) 0%, rgba(108,175,156,1) 100%)\",\r\n    },\r\n    btnDialogContainer: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n    },\r\n    btnCancel: {\r\n        backgroundColor: \"rgba(255,255,255, 0.3)\",\r\n        flex: \"1 1 50px\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#dbadad\",\r\n        },\r\n    },\r\n    btnDone: {\r\n        backgroundColor: \"rgba(255,255,255, 0.3)\",\r\n        flex: \"1 1 50px\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#99d192\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport const NoteDialog = () => {\r\n    const classes = useStyles();\r\n    const descriptionElementRef = useRef(null);\r\n    const [title, setTitle] = useState(null);\r\n    const [content, setContent] = useState(null);\r\n    const [tag, setTag] = useState(0);\r\n    const titleRef = useRef();\r\n    const contentRef = useRef();\r\n    const {\r\n        notes,\r\n        setNotes,\r\n        setCheckedNotes,\r\n        modal,\r\n        setModal,\r\n        taglist,\r\n    } = useContext(NotesContext);\r\n\r\n    useEffect(() => {\r\n        if (modal.open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n\r\n            if (modal.editNote) {\r\n                setTitle(modal.editNote.title);\r\n                setContent(modal.editNote.content);\r\n                setTag(modal.editNote.tag);\r\n            } else {\r\n                setTag(0);\r\n            }\r\n        }\r\n    }, [modal]);\r\n\r\n    const handleClose = () => {\r\n        setTitle(null);\r\n        setContent(null);\r\n        setModal({ open: false, editNote: modal.editNote });\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setTag(event.target.value);\r\n    };\r\n\r\n    function handleAddNote(e) {\r\n        const id = uuidv4();\r\n        setNotes((prevNotes) => {\r\n            return [\r\n                ...prevNotes,\r\n                {\r\n                    id: id,\r\n                    title: titleRef.current.value.trim()\r\n                        ? titleRef.current.value.trim()\r\n                        : \"(no title)\",\r\n                    content: contentRef.current.value.trim(),\r\n                    date: Date.now(),\r\n                    tag: tag,\r\n                    bookmarked: false,\r\n                },\r\n            ];\r\n        });\r\n        setCheckedNotes((prev) => {\r\n            return [...prev, { id: id, value: false }];\r\n        });\r\n        handleClose();\r\n    }\r\n\r\n    const handleEditNote = () => {\r\n        const newNotes = notes.map((x) => {\r\n            if (x.id === modal.editNote.id) {\r\n                return {\r\n                    id: x.id,\r\n                    title: titleRef.current.value.trim()\r\n                        ? titleRef.current.value.trim()\r\n                        : \"(no title)\",\r\n                    content: contentRef.current.value.trim(),\r\n                    date: x.date,\r\n                    tag: tag,\r\n                    bookmarked: x.bookmarked,\r\n                };\r\n            }\r\n            return x;\r\n        });\r\n        setNotes(newNotes);\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullWidth={true}\r\n                maxWidth=\"sm\"\r\n                className={classes.modal}\r\n                open={modal.open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"dialog-title\"\r\n                aria-describedby=\"dialog-description\"\r\n            >\r\n                <DialogTitle\r\n                    id=\"dialog-title\"\r\n                    style={{\r\n                        paddingTop: \"10px\",\r\n                        paddingBottom: \"10px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                    className={classes.headerFooter}\r\n                >\r\n                    <Typography\r\n                        style={{\r\n                            fontSize: \"30px\",\r\n                            color: \"#353138\",\r\n                            fontWeight: \"600\",\r\n                        }}\r\n                    >\r\n                        {modal.editNote ? \"Edit note\" : \"New note\"}\r\n                    </Typography>\r\n                </DialogTitle>\r\n                <DialogContent\r\n                    style={{\r\n                        backgroundColor: \"#e9f2ef\",\r\n                    }}\r\n                >\r\n                    <div className={classes.modalTitleTag}>\r\n                        <input\r\n                            type=\"text\"\r\n                            autoFocus={!modal.editNote}\r\n                            defaultValue={title}\r\n                            ref={titleRef}\r\n                            placeholder=\"Cookie recipe\"\r\n                            className={classes.titleField}\r\n                        />\r\n                        <FormControl className={classes.selectForm}>\r\n                            <Select\r\n                                labelId=\"select-tag\"\r\n                                id=\"select\"\r\n                                value={tag}\r\n                                onChange={handleChange}\r\n                                input={<SelectInput />}\r\n                            >\r\n                                {taglist.map((item, idx) => {\r\n                                    return (\r\n                                        <MenuItem key={uuidv4()} value={idx}>\r\n                                            {item ? item : \"None\"}\r\n                                        </MenuItem>\r\n                                    );\r\n                                })}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"contentContainer\">\r\n                        <textarea\r\n                            className={classes.contentArea}\r\n                            ref={contentRef}\r\n                            autoFocus={modal.editNote}\r\n                            defaultValue={content}\r\n                            placeholder=\"-Eggs\r\n-Milk\r\n-Baking soda\r\n-Flour\r\n-Butter\r\n-Sugar\r\n-Chocolate\"\r\n                        />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions className={classes.headerFooter}>\r\n                    <div className={classes.btnDialogContainer}>\r\n                        <Button\r\n                            className={classes.btnCancel}\r\n                            onClick={handleClose}\r\n                            color=\"primary\"\r\n                        >\r\n                            <Typography\r\n                                style={{\r\n                                    fontSize: \"16px\",\r\n                                    color: \"#353138\",\r\n                                    fontWeight: \"400\",\r\n                                }}\r\n                            >\r\n                                Cancel\r\n                            </Typography>\r\n                        </Button>\r\n                        <div\r\n                            style={{\r\n                                width: \"8px\",\r\n                                height: \"100%\",\r\n                            }}\r\n                        ></div>\r\n                        <Button\r\n                            className={classes.btnDone}\r\n                            onClick={\r\n                                modal.editNote ? handleEditNote : handleAddNote\r\n                            }\r\n                            color=\"primary\"\r\n                        >\r\n                            <Typography\r\n                                style={{\r\n                                    fontSize: \"16px\",\r\n                                    color: \"#353138\",\r\n                                    fontWeight: \"400\",\r\n                                }}\r\n                            >\r\n                                Done\r\n                            </Typography>\r\n                        </Button>\r\n                    </div>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoteDialog;\r\n","import React, { useContext } from \"react\";\r\nimport NotesContext from \"./NotesContext\";\r\n\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\n\r\nexport const CheckCircle = ({ note, selected }) => {\r\n    const { checkedNotes, setCheckedNotes } = useContext(NotesContext);\r\n\r\n    const handleSelect = (e) => {\r\n        const newCheckedNotes = checkedNotes.map((curr) => {\r\n            if (curr.id === note.id) {\r\n                return { id: curr.id, value: e.target.checked };\r\n            }\r\n            return curr;\r\n        });\r\n        setCheckedNotes(newCheckedNotes);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FormControlLabel\r\n                style={{\r\n                    marginLeft: \"4px\",\r\n                }}\r\n                control={\r\n                    <Checkbox\r\n                        onChange={handleSelect}\r\n                        checked={selected}\r\n                        name={note.id}\r\n                        inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        icon={<RadioButtonUncheckedIcon />}\r\n                        checkedIcon={<RemoveCircleIcon />}\r\n                    />\r\n                }\r\n            />\r\n        </>\r\n    );\r\n};\r\nexport default CheckCircle;\r\n","import \"./App.css\";\r\nimport React, { useContext } from \"react\";\r\nimport NotesContext from \"./NotesContext\";\r\nimport CheckCircle from \"./CheckCircle\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    btnNote2: {\r\n        border: 0,\r\n        borderTopLeftRadius: 10,\r\n        borderBottomLeftRadius: 10,\r\n        borderBottomRightRadius: 0,\r\n        borderTopRightRadius: 0,\r\n        textTransform: \"none\",\r\n        flex: \"1 1 50px\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#cce7ff\",\r\n        },\r\n    },\r\n    btnBM: {\r\n        color: \"#424242\",\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"19px\",\r\n        borderTopLeftRadius: 0,\r\n        borderBottomLeftRadius: 0,\r\n        \"&:hover\": {\r\n            backgroundColor: \"#cce7ff\",\r\n        },\r\n        borderStyle: \"solid\",\r\n        borderColor: \"rgba(0,0,0,0.25)\",\r\n        borderLeftWidth: 1,\r\n        paddingLeft: 4,\r\n        maxWidth: 50,\r\n    },\r\n}));\r\n\r\nexport const Note = ({ note, selected }) => {\r\n    const classes = useStyles();\r\n    const { notes, setNotes, setModal, taglist } = useContext(NotesContext);\r\n\r\n    const handleClickOpen = () => {\r\n        setModal({ open: true, editNote: note });\r\n    };\r\n\r\n    const handleBookmark = () => {\r\n        const newNotes = notes.map((currNote) => {\r\n            if (currNote === note) {\r\n                currNote.bookmarked = !note.bookmarked;\r\n            }\r\n            return currNote;\r\n        });\r\n        setNotes(newNotes);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"note-container\">\r\n                <CheckCircle note={note} selected={selected} />\r\n                <div className=\"note-btn-wrapper\">\r\n                    <Button\r\n                        className={classes.btnNote2}\r\n                        onClick={handleClickOpen}\r\n                    >\r\n                        <Typography\r\n                            style={{\r\n                                position: \"absolute\",\r\n                                left: 14,\r\n                            }}\r\n                        >\r\n                            {note.title}\r\n                        </Typography>\r\n                        <div\r\n                            style={{\r\n                                position: \"absolute\",\r\n                                right: 0,\r\n                                marginRight: 20,\r\n                                maxHeight: 24,\r\n                            }}\r\n                        >\r\n                            {taglist[note.tag]}\r\n                        </div>\r\n                    </Button>\r\n                    <Button\r\n                        className={classes.btnBM}\r\n                        aria-label=\"bookmark\"\r\n                        onClick={handleBookmark}\r\n                    >\r\n                        {note.bookmarked ? (\r\n                            <BookmarkIcon />\r\n                        ) : (\r\n                            <BookmarkBorderIcon />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Note;\r\n","import React, { useContext } from \"react\";\r\nimport NotesContext from \"./NotesContext\";\r\nimport Note from \"./Note\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst Notelist = () => {\r\n    const { checkedNotes, notesFiltered, searchTerm } = useContext(\r\n        NotesContext\r\n    );\r\n\r\n    const listedNotes = notesFiltered\r\n        .filter((val) => {\r\n            if (searchTerm === \"\") {\r\n                return val;\r\n            } else if (\r\n                val.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                val.content.toLowerCase().includes(searchTerm.toLowerCase())\r\n            ) {\r\n                return val;\r\n            }\r\n            return null;\r\n        })\r\n        .map((note) => {\r\n            return (\r\n                <React.Fragment key={uuidv4()}>\r\n                    <Note\r\n                        key={note.id}\r\n                        note={note}\r\n                        selected={\r\n                            checkedNotes\r\n                                .filter((x) => x.id === note.id)\r\n                                .map((y) => y.value)[0]\r\n                                ? true\r\n                                : false\r\n                        }\r\n                    />\r\n                    <Divider />\r\n                </React.Fragment>\r\n            );\r\n        });\r\n\r\n    return (\r\n        <>\r\n            <div className=\"notes-container\">\r\n                {listedNotes.length !== 0 ? (\r\n                    listedNotes\r\n                ) : (\r\n                    <i className=\"note-container\">No notes found</i>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notelist;\r\n","import \"./App.css\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport NotesContext from \"./NotesContext\";\r\nimport clss from \"classnames\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport EventIcon from \"@material-ui/icons/Event\";\r\nimport BookmarksIcon from \"@material-ui/icons/Bookmarks\";\r\nimport TitleIcon from \"@material-ui/icons/Title\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    btn: {\r\n        backgroundColor: \"#424242\",\r\n        color: \"white\",\r\n        height: \"50px\",\r\n        borderRadius: 0,\r\n        \"&:hover\": {\r\n            backgroundColor: \"#000000\",\r\n        },\r\n        flex: \" 1 1 80px\",\r\n        borderTop: \"5px solid transparent\",\r\n        borderBottom: \"5px solid transparent\",\r\n        transitionDuration: \"0.1s\",\r\n    },\r\n    btnDel: {\r\n        backgroundColor: \"#ff2b2b\",\r\n        color: \"white\",\r\n        height: \"50px\",\r\n        borderRadius: 0,\r\n        \"&:hover\": {\r\n            backgroundColor: \"#d11313\",\r\n        },\r\n        flex: \" 1 1 80px\",\r\n    },\r\n    btnDelDisabled: {\r\n        backgroundColor: \"#ff8080\",\r\n        color: \"white\",\r\n\r\n        \"&:hover\": {\r\n            backgroundColor: \"#ff8080\",\r\n            color: \"white\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport const NoteActions = () => {\r\n    const classes = useStyles();\r\n    const [notesOrdered, setNotesOrdered] = useState(null);\r\n    const [ordering, setOrdering] = useState(null);\r\n    const [bookmarked, setBookmarked] = useState(false);\r\n    const [notesSelected, areNotesSelected] = useState(false);\r\n    const {\r\n        notes,\r\n        setNotes,\r\n        setNotesFiltered,\r\n        checkedNotes,\r\n        setCheckedNotes,\r\n    } = useContext(NotesContext);\r\n\r\n    useEffect(() => {\r\n        const res = checkedNotes.filter((x) => x.value).length !== 0;\r\n        areNotesSelected(res);\r\n    }, [checkedNotes]);\r\n\r\n    const handleNoteDeletion = () => {\r\n        const deletionIDs = checkedNotes\r\n            .map((curr) => {\r\n                return curr.value ? curr.id : null;\r\n            })\r\n            .filter((x) => x);\r\n\r\n        const newNotes = notes.filter((note) => !deletionIDs.includes(note.id));\r\n        const newCheckedNotes = newNotes.map((note) => {\r\n            return { id: note.id, value: false };\r\n        });\r\n        setNotes(newNotes);\r\n        setCheckedNotes(newCheckedNotes);\r\n    };\r\n\r\n    const handleBookmarked = () => {\r\n        setBookmarked(!bookmarked);\r\n    };\r\n\r\n    const handleOrdering = (orderType) => {\r\n        if (orderType === \"text\") {\r\n            if (!ordering || ordering !== \"asc\") {\r\n                setOrdering(\"asc\");\r\n            } else {\r\n                setOrdering(\"desc\");\r\n            }\r\n        } else if (orderType === \"date\") {\r\n            if (!ordering || ordering !== \"new\") {\r\n                setOrdering(\"new\");\r\n            } else {\r\n                setOrdering(\"old\");\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // order notes\r\n        let orderedNotes = [...notes];\r\n        orderedNotes.sort((a, b) => {\r\n            if (ordering === \"asc\") return a.title.localeCompare(b.title);\r\n            else if (ordering === \"desc\")\r\n                return -1 * a.title.localeCompare(b.title);\r\n            else if (ordering === \"new\") return a.date <= b.date ? 1 : -1;\r\n            else return a.date <= b.date ? -1 : 1;\r\n        });\r\n        setNotesOrdered(orderedNotes);\r\n    }, [notes, ordering]);\r\n\r\n    useEffect(() => {\r\n        // filter bookmarked notes\r\n        const newNotes = notesOrdered\r\n            ? notesOrdered.filter((note) => {\r\n                  if (bookmarked) return note.bookmarked;\r\n                  return true;\r\n              })\r\n            : notes;\r\n\r\n        setNotesFiltered(newNotes);\r\n    }, [notesOrdered, bookmarked]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"toolbar-container\">\r\n                <Button\r\n                    className={clss(classes.btn, \"tooltip\")}\r\n                    aria-label=\"sort by text\"\r\n                    onClick={() => handleOrdering(\"text\")}\r\n                    style={\r\n                        ordering === \"asc\" || ordering === \"desc\"\r\n                            ? { borderBottom: \"5px solid #d900ff\" }\r\n                            : null\r\n                    }\r\n                >\r\n                    {ordering === \"asc\" || ordering === \"desc\" ? (\r\n                        ordering === \"asc\" ? (\r\n                            <>\r\n                                <TitleIcon />\r\n                                <KeyboardArrowDownIcon />\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <TitleIcon />\r\n                                <KeyboardArrowUpIcon />\r\n                            </>\r\n                        )\r\n                    ) : (\r\n                        <TitleIcon />\r\n                    )}\r\n                    <span className=\"tooltiptext\">sort by title</span>\r\n                </Button>\r\n                <Button\r\n                    className={clss(classes.btn, \"tooltip\")}\r\n                    aria-label=\"sort by date\"\r\n                    onClick={() => handleOrdering(\"date\")}\r\n                    style={\r\n                        ordering === \"new\" || ordering === \"old\"\r\n                            ? { borderBottom: \"5px solid #d900ff\" }\r\n                            : null\r\n                    }\r\n                >\r\n                    {ordering === \"new\" || ordering === \"old\" ? (\r\n                        ordering === \"new\" ? (\r\n                            <>\r\n                                <EventIcon />\r\n                                <KeyboardArrowDownIcon />\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <EventIcon />\r\n                                <KeyboardArrowUpIcon />\r\n                            </>\r\n                        )\r\n                    ) : (\r\n                        <EventIcon />\r\n                    )}\r\n                    <span className=\"tooltiptext\">sort by date</span>\r\n                </Button>\r\n                <Button\r\n                    className={clss(classes.btn, \"tooltip\")}\r\n                    aria-label=\"show bookmarked\"\r\n                    onClick={handleBookmarked}\r\n                    style={\r\n                        bookmarked\r\n                            ? { borderBottom: \"5px solid #ffc800\" }\r\n                            : null\r\n                    }\r\n                >\r\n                    <BookmarksIcon />\r\n                    <span className=\"tooltiptext\">\r\n                        {bookmarked ? \"hide bookmarked\" : \"show bookmarked\"}\r\n                    </span>\r\n                </Button>\r\n                <Button\r\n                    aria-label=\"delete selected notes\"\r\n                    disableRipple={!notesSelected}\r\n                    className={clss(\r\n                        classes.btnDel,\r\n                        notesSelected ? null : classes.btnDelDisabled\r\n                    )}\r\n                    onClick={handleNoteDeletion}\r\n                >\r\n                    <DeleteIcon />\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NoteActions;\r\n","import \"./App.css\";\r\nimport React, { useContext } from \"react\";\r\nimport NotesContext from \"./NotesContext\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    searchField: {\r\n        verticalAlign: \"middle\",\r\n        lineHeight: \"48px\",\r\n        flex: \" 1 1 75%\",\r\n        backgroundColor: \"#ffffff\",\r\n        borderRadius: 0,\r\n        borderTopLeftRadius: 25,\r\n        borderBottomLeftRadius: 25,\r\n        textIndent: 48,\r\n        borderStyle: \"solid\",\r\n        borderWidth: 1,\r\n        borderColor: \"transparent\",\r\n        minWidth: 50,\r\n        height: 48,\r\n        fontSize: 20,\r\n        paddingRight: \"5%\",\r\n        maxLength: 10,\r\n        boxShadow: \"1px 2px 10px rgba(0,0,0,0.25)\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#e3eeff\",\r\n        },\r\n        \"&:focus\": {\r\n            backgroundColor: \"#e3eeff\",\r\n            borderColor: \"transparent\",\r\n            outline: \"none\",\r\n        },\r\n    },\r\n    btnAdd: {\r\n        backgroundColor: \"#1d8b8b\",\r\n        color: \"white\",\r\n        borderRadius: \"0px\",\r\n        minWidth: \"80px\",\r\n        flex: \" 1 1 25%\",\r\n        boxShadow: \"1px 2px 10px rgba(0,0,0,0.25)\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#006969\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport const SearchAddNote = () => {\r\n    const classes = useStyles();\r\n    const { setSearchTerm, setModal } = useContext(NotesContext);\r\n\r\n    const handleClickOpen = () => {\r\n        setModal({ open: true, editNote: null });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"search-add-container\">\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        left: 30,\r\n                        maxHeight: 24,\r\n                        textAlign: \"center\",\r\n                        verticalAlign: \"middle\",\r\n                        lineHeight: \"48px\",\r\n                        fontSize: 20,\r\n                        pointerEvents: \"none\",\r\n                    }}\r\n                >\r\n                    🔍\r\n                </div>\r\n                <input\r\n                    className={classes.searchField}\r\n                    type=\"search\"\r\n                    placeholder=\"Search notes\"\r\n                    onChange={(e) => {\r\n                        setSearchTerm(e.target.value.trim());\r\n                    }}\r\n                />\r\n                <Button\r\n                    className={classes.btnAdd}\r\n                    aria-label=\"new note\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    <AddIcon />\r\n                    <Typography>Note</Typography>\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchAddNote;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { NotesProvider } from \"./NotesContext\";\nimport NoteDialog from \"./Modal.js\";\nimport Notelist from \"./Notelist\";\nimport NoteActions from \"./NoteActions\";\nimport SearchAddNote from \"./SearchAddNote\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Typography,\n    Divider,\n    Card,\n    CardHeader,\n    CardContent,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        position: \"absolute\",\n        top: \"4%\",\n        width: \"100%\",\n        maxWidth: 768,\n        backgroundColor: \"#fff7ba\",\n        \"@media (max-width:768px)\": {\n            top: 0,\n        },\n        boxShadow: \"0px 2px 20px rgba(0,0,0,0.4)\",\n    },\n    header: {\n        backgroundColor: \"white\",\n    },\n    headerText: {\n        fontWeight: 700,\n        fontSize: 40,\n        color: \"#424242\",\n    },\n}));\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <NotesProvider>\n                <MyCard />\n                <NoteDialog />\n            </NotesProvider>\n        </div>\n    );\n}\n\nconst MyCard = () => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <CardHeader\n                title={\n                    <Typography variant=\"h4\" className={classes.headerText}>\n                        Notepad\n                    </Typography>\n                }\n                className={classes.header}\n            />\n            <Divider />\n            <CardContent>\n                <NoteActions />\n            </CardContent>\n            <Divider />\n            <CardContent>\n                <SearchAddNote />\n            </CardContent>\n            <Divider />\n            <CardContent>\n                <Notelist />\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default App;\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}